{"version":3,"file":"worksheet-reader.js","names":["EventEmitter","require","parseSax","_","utils","colCache","Dimensions","slideFormula","Row","Column","WorksheetReader","constructor","_ref","workbook","id","iterator","options","name","concat","_columns","_keys","_dimensions","_sharedFormulae","_hyperlinkRels","destroy","Error","dimensions","columns","getColumn","c","col","l2n","length","n","push","getColumnKey","key","setColumnKey","value","deleteColumnKey","eachColumnKey","f","each","read","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","parse","_step","next","done","events","eventType","emit","err","return","error","Symbol","asyncIterator","_this","_wrapAsyncGenerator","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_awaitAsyncGenerator","_this2","emitSheet","emitHyperlinks","hyperlinks","worksheets","sharedStrings","styles","properties","hyperlinkRelationships","inCols","inRows","inHyperlinks","cols","row","current","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","worksheetEvents","node","min","parseInt","attributes","max","width","parseFloat","styleId","style","r","ht","height","s","getStyleModel","ref","t","text","si","v","hyperlink","rId","fromModel","expandRow","address","decodeAddress","cell","getCell","formulaText","cellValue","formula","undefined","master","shareType","result","xmlDecode","index","sharedString","isDateFmt","numFmt","excelToDate","model","date1904","rel","target","module","exports"],"sources":["../../../../lib/stream/xlsx/worksheet-reader.js"],"sourcesContent":["const {EventEmitter} = require('events');\nconst parseSax = require('../../utils/parse-sax');\n\nconst _ = require('../../utils/under-dash');\nconst utils = require('../../utils/utils');\nconst colCache = require('../../utils/col-cache');\nconst Dimensions = require('../../doc/range');\nconst {slideFormula} = require('../../utils/shared-formula');\n\nconst Row = require('../../doc/row');\nconst Column = require('../../doc/column');\n\nclass WorksheetReader extends EventEmitter {\n  constructor({workbook, id, iterator, options}) {\n    super();\n\n    this.workbook = workbook;\n    this.id = id;\n    this.iterator = iterator;\n    this.options = options || {};\n\n    // and a name\n    this.name = `Sheet${this.id}`;\n\n    // column definitions\n    this._columns = null;\n    this._keys = {};\n\n    // keep a record of dimensions\n    this._dimensions = new Dimensions();\n\n    // shared formula tracking\n    this._sharedFormulae = {};\n\n    // hyperlink relationship tracking\n    this._hyperlinkRels = null;\n  }\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy() {\n    throw new Error('Invalid Operation: destroy');\n  }\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) {\n        return col;\n      }\n\n      // otherise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n  async read() {\n    try {\n      for await (const events of this.parse()) {\n        for (const {eventType, value} of events) {\n          this.emit(eventType, value);\n        }\n      }\n      this.emit('finished');\n    } catch (error) {\n      this.emit('error', error);\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const events of this.parse()) {\n      for (const {eventType, value} of events) {\n        if (eventType === 'row') {\n          yield value;\n        }\n      }\n    }\n  }\n\n  async *parse() {\n    const {iterator, options} = this;\n    let emitSheet = false;\n    let emitHyperlinks = false;\n    let hyperlinks = null;\n    switch (options.worksheets) {\n      case 'emit':\n        emitSheet = true;\n        break;\n      case 'prep':\n        break;\n      default:\n        break;\n    }\n    switch (options.hyperlinks) {\n      case 'emit':\n        emitHyperlinks = true;\n        break;\n      case 'cache':\n        this.hyperlinks = hyperlinks = {};\n        break;\n      default:\n        break;\n    }\n    if (!emitSheet && !emitHyperlinks && !hyperlinks) {\n      return;\n    }\n\n    // references\n    const {sharedStrings, styles, properties} = this.workbook;\n\n    // Get hyperlink relationships for this worksheet\n    if (this.workbook.hyperlinkRelationships && this.workbook.hyperlinkRelationships[this.id]) {\n      this._hyperlinkRels = this.workbook.hyperlinkRelationships[this.id];\n    }\n\n    // xml position\n    let inCols = false;\n    let inRows = false;\n    let inHyperlinks = false;\n\n    // parse state\n    let cols = null;\n    let row = null;\n    let c = null;\n    let current = null;\n    for await (const events of parseSax(iterator)) {\n      const worksheetEvents = [];\n      for (const {eventType, value} of events) {\n        if (eventType === 'opentag') {\n          const node = value;\n          if (emitSheet) {\n            switch (node.name) {\n              case 'cols':\n                inCols = true;\n                cols = [];\n                break;\n              case 'sheetData':\n                inRows = true;\n                break;\n\n              case 'col':\n                if (inCols) {\n                  cols.push({\n                    min: parseInt(node.attributes.min, 10),\n                    max: parseInt(node.attributes.max, 10),\n                    width: parseFloat(node.attributes.width),\n                    styleId: parseInt(node.attributes.style || '0', 10),\n                  });\n                }\n                break;\n\n              case 'row':\n                if (inRows) {\n                  const r = parseInt(node.attributes.r, 10);\n                  row = new Row(this, r);\n                  if (node.attributes.ht) {\n                    row.height = parseFloat(node.attributes.ht);\n                  }\n                  if (node.attributes.s) {\n                    const styleId = parseInt(node.attributes.s, 10);\n                    const style = styles.getStyleModel(styleId);\n                    if (style) {\n                      row.style = style;\n                    }\n                  }\n                }\n                break;\n              case 'c':\n                if (row) {\n                  c = {\n                    ref: node.attributes.r,\n                    s: parseInt(node.attributes.s, 10),\n                    t: node.attributes.t,\n                  };\n                }\n                break;\n              case 'f':\n                if (c) {\n                  current = c.f = {\n                    text: '',\n                    si: node.attributes.si,\n                    t: node.attributes.t,\n                    ref: node.attributes.ref,\n                  };\n                }\n                break;\n              case 'v':\n                if (c) {\n                  current = c.v = {text: ''};\n                }\n                break;\n              case 'is':\n              case 't':\n                if (c) {\n                  current = c.v = {text: ''};\n                }\n                break;\n              case 'mergeCell':\n                break;\n              default:\n                break;\n            }\n          }\n\n          // =================================================================\n          //\n          if (emitHyperlinks || hyperlinks) {\n            switch (node.name) {\n              case 'hyperlinks':\n                inHyperlinks = true;\n                break;\n              case 'hyperlink':\n                if (inHyperlinks) {\n                  const hyperlink = {\n                    ref: node.attributes.ref,\n                    rId: node.attributes['r:id'],\n                  };\n                  if (emitHyperlinks) {\n                    worksheetEvents.push({eventType: 'hyperlink', value: hyperlink});\n                  } else {\n                    hyperlinks[hyperlink.ref] = hyperlink;\n                  }\n                }\n                break;\n              default:\n                break;\n            }\n          }\n        } else if (eventType === 'text') {\n          // only text data is for sheet values\n          if (emitSheet) {\n            if (current) {\n              current.text += value;\n            }\n          }\n        } else if (eventType === 'closetag') {\n          const node = value;\n          if (emitSheet) {\n            switch (node.name) {\n              case 'cols':\n                inCols = false;\n                this._columns = Column.fromModel(cols);\n                break;\n              case 'sheetData':\n                inRows = false;\n                break;\n\n              case 'row':\n                this._dimensions.expandRow(row);\n                worksheetEvents.push({eventType: 'row', value: row});\n                row = null;\n                break;\n\n              case 'c':\n                if (row && c) {\n                  const address = colCache.decodeAddress(c.ref);\n                  const cell = row.getCell(address.col);\n                  if (c.s) {\n                    const style = styles.getStyleModel(c.s);\n                    if (style) {\n                      cell.style = style;\n                    }\n                  }\n\n                  if (c.f) {\n                    let formulaText = c.f.text;\n                    const cellValue = {};\n\n                    // Handle shared formulas\n                    if (c.f.t === 'shared') {\n                      if (c.f.ref) {\n                        // This is a master cell - store the formula and address\n                        this._sharedFormulae[c.f.si] = {\n                          formula: formulaText,\n                          address: c.ref,\n                        };\n                      } else if (c.f.si !== undefined) {\n                        // This is a slave cell - translate the master formula\n                        const master = this._sharedFormulae[c.f.si];\n                        if (master) {\n                          formulaText = slideFormula(master.formula, master.address, c.ref);\n                        }\n                      }\n                      cellValue.formula = formulaText;\n                    } else if (c.f.t === 'dataTable') {\n                      // Handle data table formulas - preserve metadata\n                      cellValue.shareType = 'dataTable';\n                      if (c.f.ref) {\n                        cellValue.ref = c.f.ref;\n                      }\n                      if (formulaText) {\n                        cellValue.formula = formulaText;\n                      }\n                    } else if (c.f.t === 'array') {\n                      // Handle array formulas - preserve metadata\n                      cellValue.formula = formulaText;\n                      cellValue.shareType = 'array';\n                      if (c.f.ref) {\n                        cellValue.ref = c.f.ref;\n                      }\n                    } else {\n                      // Regular formula\n                      cellValue.formula = formulaText;\n                    }\n\n                    // Add result if present\n                    if (c.v) {\n                      if (c.t === 'str') {\n                        cellValue.result = utils.xmlDecode(c.v.text);\n                      } else {\n                        cellValue.result = parseFloat(c.v.text);\n                      }\n                    }\n                    cell.value = cellValue;\n                  } else if (c.v) {\n                    switch (c.t) {\n                      case 's': {\n                        const index = parseInt(c.v.text, 10);\n                        if (sharedStrings) {\n                          cell.value = sharedStrings[index];\n                        } else {\n                          cell.value = {\n                            sharedString: index,\n                          };\n                        }\n                        break;\n                      }\n\n                      case 'inlineStr':\n                      case 'str':\n                        cell.value = utils.xmlDecode(c.v.text);\n                        break;\n\n                      case 'e':\n                        cell.value = {error: c.v.text};\n                        break;\n\n                      case 'b':\n                        cell.value = parseInt(c.v.text, 10) !== 0;\n                        break;\n\n                      default:\n                        if (utils.isDateFmt(cell.numFmt)) {\n                          cell.value = utils.excelToDate(\n                            parseFloat(c.v.text),\n                            properties.model && properties.model.date1904\n                          );\n                        } else {\n                          cell.value = parseFloat(c.v.text);\n                        }\n                        break;\n                    }\n                  }\n                  if (hyperlinks) {\n                    const hyperlink = hyperlinks[c.ref];\n                    if (hyperlink) {\n                      cell.text = cell.value;\n                      cell.value = undefined;\n\n                      // Resolve rId to actual target URL using relationships\n                      if (hyperlink.rId && this._hyperlinkRels && this._hyperlinkRels[hyperlink.rId]) {\n                        const rel = this._hyperlinkRels[hyperlink.rId];\n                        cell.hyperlink = rel.target;\n                      } else {\n                        // Fallback to hyperlink object if we can't resolve\n                        cell.hyperlink = hyperlink;\n                      }\n                    }\n                  }\n                  c = null;\n                }\n                break;\n              default:\n                break;\n            }\n          }\n          if (emitHyperlinks || hyperlinks) {\n            switch (node.name) {\n              case 'hyperlinks':\n                inHyperlinks = false;\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n      if (worksheetEvents.length > 0) {\n        yield worksheetEvents;\n      }\n    }\n  }\n}\n\nmodule.exports = WorksheetReader;\n"],"mappings":"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","ignoreList":[]}