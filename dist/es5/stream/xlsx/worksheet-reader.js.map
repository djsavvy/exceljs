{"version":3,"file":"worksheet-reader.js","names":["EventEmitter","require","parseSax","_","utils","colCache","Dimensions","slideFormula","Row","Column","WorksheetReader","constructor","_ref","workbook","id","iterator","options","name","concat","_columns","_keys","_dimensions","_sharedFormulae","destroy","Error","dimensions","columns","getColumn","c","col","l2n","length","n","push","getColumnKey","key","setColumnKey","value","deleteColumnKey","eachColumnKey","f","each","read","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","parse","_step","next","done","events","eventType","emit","err","return","error","Symbol","asyncIterator","_this","_wrapAsyncGenerator","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_awaitAsyncGenerator","_this2","emitSheet","emitHyperlinks","hyperlinks","worksheets","sharedStrings","styles","properties","inCols","inRows","inHyperlinks","cols","row","current","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","worksheetEvents","node","min","parseInt","attributes","max","width","parseFloat","styleId","style","r","ht","height","s","getStyleModel","ref","t","text","si","v","hyperlink","rId","fromModel","expandRow","address","decodeAddress","cell","getCell","formulaText","formula","undefined","master","cellValue","result","xmlDecode","index","sharedString","isDateFmt","numFmt","excelToDate","model","date1904","module","exports"],"sources":["../../../../lib/stream/xlsx/worksheet-reader.js"],"sourcesContent":["const {EventEmitter} = require('events');\nconst parseSax = require('../../utils/parse-sax');\n\nconst _ = require('../../utils/under-dash');\nconst utils = require('../../utils/utils');\nconst colCache = require('../../utils/col-cache');\nconst Dimensions = require('../../doc/range');\nconst {slideFormula} = require('../../utils/shared-formula');\n\nconst Row = require('../../doc/row');\nconst Column = require('../../doc/column');\n\nclass WorksheetReader extends EventEmitter {\n  constructor({workbook, id, iterator, options}) {\n    super();\n\n    this.workbook = workbook;\n    this.id = id;\n    this.iterator = iterator;\n    this.options = options || {};\n\n    // and a name\n    this.name = `Sheet${this.id}`;\n\n    // column definitions\n    this._columns = null;\n    this._keys = {};\n\n    // keep a record of dimensions\n    this._dimensions = new Dimensions();\n\n    // shared formula tracking\n    this._sharedFormulae = {};\n  }\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy() {\n    throw new Error('Invalid Operation: destroy');\n  }\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) {\n        return col;\n      }\n\n      // otherise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n  async read() {\n    try {\n      for await (const events of this.parse()) {\n        for (const {eventType, value} of events) {\n          this.emit(eventType, value);\n        }\n      }\n      this.emit('finished');\n    } catch (error) {\n      this.emit('error', error);\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const events of this.parse()) {\n      for (const {eventType, value} of events) {\n        if (eventType === 'row') {\n          yield value;\n        }\n      }\n    }\n  }\n\n  async *parse() {\n    const {iterator, options} = this;\n    let emitSheet = false;\n    let emitHyperlinks = false;\n    let hyperlinks = null;\n    switch (options.worksheets) {\n      case 'emit':\n        emitSheet = true;\n        break;\n      case 'prep':\n        break;\n      default:\n        break;\n    }\n    switch (options.hyperlinks) {\n      case 'emit':\n        emitHyperlinks = true;\n        break;\n      case 'cache':\n        this.hyperlinks = hyperlinks = {};\n        break;\n      default:\n        break;\n    }\n    if (!emitSheet && !emitHyperlinks && !hyperlinks) {\n      return;\n    }\n\n    // references\n    const {sharedStrings, styles, properties} = this.workbook;\n\n    // xml position\n    let inCols = false;\n    let inRows = false;\n    let inHyperlinks = false;\n\n    // parse state\n    let cols = null;\n    let row = null;\n    let c = null;\n    let current = null;\n    for await (const events of parseSax(iterator)) {\n      const worksheetEvents = [];\n      for (const {eventType, value} of events) {\n        if (eventType === 'opentag') {\n          const node = value;\n          if (emitSheet) {\n            switch (node.name) {\n              case 'cols':\n                inCols = true;\n                cols = [];\n                break;\n              case 'sheetData':\n                inRows = true;\n                break;\n\n              case 'col':\n                if (inCols) {\n                  cols.push({\n                    min: parseInt(node.attributes.min, 10),\n                    max: parseInt(node.attributes.max, 10),\n                    width: parseFloat(node.attributes.width),\n                    styleId: parseInt(node.attributes.style || '0', 10),\n                  });\n                }\n                break;\n\n              case 'row':\n                if (inRows) {\n                  const r = parseInt(node.attributes.r, 10);\n                  row = new Row(this, r);\n                  if (node.attributes.ht) {\n                    row.height = parseFloat(node.attributes.ht);\n                  }\n                  if (node.attributes.s) {\n                    const styleId = parseInt(node.attributes.s, 10);\n                    const style = styles.getStyleModel(styleId);\n                    if (style) {\n                      row.style = style;\n                    }\n                  }\n                }\n                break;\n              case 'c':\n                if (row) {\n                  c = {\n                    ref: node.attributes.r,\n                    s: parseInt(node.attributes.s, 10),\n                    t: node.attributes.t,\n                  };\n                }\n                break;\n              case 'f':\n                if (c) {\n                  current = c.f = {\n                    text: '',\n                    si: node.attributes.si,\n                    t: node.attributes.t,\n                    ref: node.attributes.ref,\n                  };\n                }\n                break;\n              case 'v':\n                if (c) {\n                  current = c.v = {text: ''};\n                }\n                break;\n              case 'is':\n              case 't':\n                if (c) {\n                  current = c.v = {text: ''};\n                }\n                break;\n              case 'mergeCell':\n                break;\n              default:\n                break;\n            }\n          }\n\n          // =================================================================\n          //\n          if (emitHyperlinks || hyperlinks) {\n            switch (node.name) {\n              case 'hyperlinks':\n                inHyperlinks = true;\n                break;\n              case 'hyperlink':\n                if (inHyperlinks) {\n                  const hyperlink = {\n                    ref: node.attributes.ref,\n                    rId: node.attributes['r:id'],\n                  };\n                  if (emitHyperlinks) {\n                    worksheetEvents.push({eventType: 'hyperlink', value: hyperlink});\n                  } else {\n                    hyperlinks[hyperlink.ref] = hyperlink;\n                  }\n                }\n                break;\n              default:\n                break;\n            }\n          }\n        } else if (eventType === 'text') {\n          // only text data is for sheet values\n          if (emitSheet) {\n            if (current) {\n              current.text += value;\n            }\n          }\n        } else if (eventType === 'closetag') {\n          const node = value;\n          if (emitSheet) {\n            switch (node.name) {\n              case 'cols':\n                inCols = false;\n                this._columns = Column.fromModel(cols);\n                break;\n              case 'sheetData':\n                inRows = false;\n                break;\n\n              case 'row':\n                this._dimensions.expandRow(row);\n                worksheetEvents.push({eventType: 'row', value: row});\n                row = null;\n                break;\n\n              case 'c':\n                if (row && c) {\n                  const address = colCache.decodeAddress(c.ref);\n                  const cell = row.getCell(address.col);\n                  if (c.s) {\n                    const style = styles.getStyleModel(c.s);\n                    if (style) {\n                      cell.style = style;\n                    }\n                  }\n\n                  if (c.f) {\n                    let formulaText = c.f.text;\n\n                    // Handle shared formulas\n                    if (c.f.t === 'shared') {\n                      if (c.f.ref) {\n                        // This is a master cell - store the formula and address\n                        this._sharedFormulae[c.f.si] = {\n                          formula: formulaText,\n                          address: c.ref,\n                        };\n                      } else if (c.f.si !== undefined) {\n                        // This is a slave cell - translate the master formula\n                        const master = this._sharedFormulae[c.f.si];\n                        if (master) {\n                          formulaText = slideFormula(master.formula, master.address, c.ref);\n                        }\n                      }\n                    }\n\n                    const cellValue = {\n                      formula: formulaText,\n                    };\n                    if (c.v) {\n                      if (c.t === 'str') {\n                        cellValue.result = utils.xmlDecode(c.v.text);\n                      } else {\n                        cellValue.result = parseFloat(c.v.text);\n                      }\n                    }\n                    cell.value = cellValue;\n                  } else if (c.v) {\n                    switch (c.t) {\n                      case 's': {\n                        const index = parseInt(c.v.text, 10);\n                        if (sharedStrings) {\n                          cell.value = sharedStrings[index];\n                        } else {\n                          cell.value = {\n                            sharedString: index,\n                          };\n                        }\n                        break;\n                      }\n\n                      case 'inlineStr':\n                      case 'str':\n                        cell.value = utils.xmlDecode(c.v.text);\n                        break;\n\n                      case 'e':\n                        cell.value = {error: c.v.text};\n                        break;\n\n                      case 'b':\n                        cell.value = parseInt(c.v.text, 10) !== 0;\n                        break;\n\n                      default:\n                        if (utils.isDateFmt(cell.numFmt)) {\n                          cell.value = utils.excelToDate(\n                            parseFloat(c.v.text),\n                            properties.model && properties.model.date1904\n                          );\n                        } else {\n                          cell.value = parseFloat(c.v.text);\n                        }\n                        break;\n                    }\n                  }\n                  if (hyperlinks) {\n                    const hyperlink = hyperlinks[c.ref];\n                    if (hyperlink) {\n                      cell.text = cell.value;\n                      cell.value = undefined;\n                      cell.hyperlink = hyperlink;\n                    }\n                  }\n                  c = null;\n                }\n                break;\n              default:\n                break;\n            }\n          }\n          if (emitHyperlinks || hyperlinks) {\n            switch (node.name) {\n              case 'hyperlinks':\n                inHyperlinks = false;\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n      if (worksheetEvents.length > 0) {\n        yield worksheetEvents;\n      }\n    }\n  }\n}\n\nmodule.exports = WorksheetReader;\n"],"mappings":"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","ignoreList":[]}