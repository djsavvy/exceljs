{"version":3,"file":"sheet-rels-writer.js","names":["utils","require","RelType","HyperlinksProxy","constructor","sheetRelsWriter","writer","push","hyperlink","addHyperlink","SheetRelsWriter","options","id","count","_hyperlinks","_workbook","workbook","stream","_stream","_openStream","concat","length","each","fn","forEach","hyperlinksProxy","_hyperlinksProxy","relationship","Target","target","Type","Hyperlink","TargetMode","rId","_writeRelationship","address","addMedia","media","addRelationship","rel","commit","_writeClose","end","_writeOpen","write","xmlEncode","module","exports"],"sources":["../../../../lib/stream/xlsx/sheet-rels-writer.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst utils = require('../../utils/utils');\r\nconst RelType = require('../../xlsx/rel-type');\r\n\r\nclass HyperlinksProxy {\r\n  constructor(sheetRelsWriter) {\r\n    this.writer = sheetRelsWriter;\r\n  }\r\n\r\n  push(hyperlink) {\r\n    this.writer.addHyperlink(hyperlink);\r\n  }\r\n}\r\n\r\nclass SheetRelsWriter {\r\n  constructor(options) {\r\n    // in a workbook, each sheet will have a number\r\n    this.id = options.id;\r\n\r\n    // count of all relationships\r\n    this.count = 0;\r\n\r\n    // keep record of all hyperlinks\r\n    this._hyperlinks = [];\r\n\r\n    this._workbook = options.workbook;\r\n  }\r\n\r\n  get stream() {\r\n    if (!this._stream) {\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      this._stream = this._workbook._openStream(`/xl/worksheets/_rels/sheet${this.id}.xml.rels`);\r\n    }\r\n    return this._stream;\r\n  }\r\n\r\n  get length() {\r\n    return this._hyperlinks.length;\r\n  }\r\n\r\n  each(fn) {\r\n    return this._hyperlinks.forEach(fn);\r\n  }\r\n\r\n  get hyperlinksProxy() {\r\n    return this._hyperlinksProxy || (this._hyperlinksProxy = new HyperlinksProxy(this));\r\n  }\r\n\r\n  addHyperlink(hyperlink) {\r\n    // Write to stream\r\n    const relationship = {\r\n      Target: hyperlink.target,\r\n      Type: RelType.Hyperlink,\r\n      TargetMode: 'External',\r\n    };\r\n    const rId = this._writeRelationship(relationship);\r\n\r\n    // store sheet stuff for later\r\n    this._hyperlinks.push({\r\n      rId,\r\n      address: hyperlink.address,\r\n    });\r\n  }\r\n\r\n  addMedia(media) {\r\n    return this._writeRelationship(media);\r\n  }\r\n\r\n  addRelationship(rel) {\r\n    return this._writeRelationship(rel);\r\n  }\r\n\r\n  commit() {\r\n    if (this.count) {\r\n      // write xml utro\r\n      this._writeClose();\r\n      // and close stream\r\n      this.stream.end();\r\n    }\r\n  }\r\n\r\n  // ================================================================================\r\n  _writeOpen() {\r\n    this.stream.write(\r\n      `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n       <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">`\r\n    );\r\n  }\r\n\r\n  _writeRelationship(relationship) {\r\n    if (!this.count) {\r\n      this._writeOpen();\r\n    }\r\n\r\n    const rId = `rId${++this.count}`;\r\n\r\n    if (relationship.TargetMode) {\r\n      this.stream.write(\r\n        `<Relationship Id=\"${rId}\"` +\r\n          ` Type=\"${relationship.Type}\"` +\r\n          ` Target=\"${utils.xmlEncode(relationship.Target)}\"` +\r\n          ` TargetMode=\"${relationship.TargetMode}\"` +\r\n          '/>'\r\n      );\r\n    } else {\r\n      this.stream.write(\r\n        `<Relationship Id=\"${rId}\" Type=\"${relationship.Type}\" Target=\"${relationship.Target}\"/>`\r\n      );\r\n    }\r\n\r\n    return rId;\r\n  }\r\n\r\n  _writeClose() {\r\n    this.stream.write('</Relationships>');\r\n  }\r\n}\r\n\r\nmodule.exports = SheetRelsWriter;\r\n"],"mappings":";;AAAA;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC1C,MAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAE9C,MAAME,eAAe,CAAC;EACpBC,WAAWA,CAACC,eAAe,EAAE;IAC3B,IAAI,CAACC,MAAM,GAAGD,eAAe;EAC/B;EAEAE,IAAIA,CAACC,SAAS,EAAE;IACd,IAAI,CAACF,MAAM,CAACG,YAAY,CAACD,SAAS,CAAC;EACrC;AACF;AAEA,MAAME,eAAe,CAAC;EACpBN,WAAWA,CAACO,OAAO,EAAE;IACnB;IACA,IAAI,CAACC,EAAE,GAAGD,OAAO,CAACC,EAAE;;IAEpB;IACA,IAAI,CAACC,KAAK,GAAG,CAAC;;IAEd;IACA,IAAI,CAACC,WAAW,GAAG,EAAE;IAErB,IAAI,CAACC,SAAS,GAAGJ,OAAO,CAACK,QAAQ;EACnC;EAEA,IAAIC,MAAMA,CAAA,EAAG;IACX,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;MACjB;MACA,IAAI,CAACA,OAAO,GAAG,IAAI,CAACH,SAAS,CAACI,WAAW,8BAAAC,MAAA,CAA8B,IAAI,CAACR,EAAE,cAAW,CAAC;IAC5F;IACA,OAAO,IAAI,CAACM,OAAO;EACrB;EAEA,IAAIG,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACP,WAAW,CAACO,MAAM;EAChC;EAEAC,IAAIA,CAACC,EAAE,EAAE;IACP,OAAO,IAAI,CAACT,WAAW,CAACU,OAAO,CAACD,EAAE,CAAC;EACrC;EAEA,IAAIE,eAAeA,CAAA,EAAG;IACpB,OAAO,IAAI,CAACC,gBAAgB,KAAK,IAAI,CAACA,gBAAgB,GAAG,IAAIvB,eAAe,CAAC,IAAI,CAAC,CAAC;EACrF;EAEAM,YAAYA,CAACD,SAAS,EAAE;IACtB;IACA,MAAMmB,YAAY,GAAG;MACnBC,MAAM,EAAEpB,SAAS,CAACqB,MAAM;MACxBC,IAAI,EAAE5B,OAAO,CAAC6B,SAAS;MACvBC,UAAU,EAAE;IACd,CAAC;IACD,MAAMC,GAAG,GAAG,IAAI,CAACC,kBAAkB,CAACP,YAAY,CAAC;;IAEjD;IACA,IAAI,CAACb,WAAW,CAACP,IAAI,CAAC;MACpB0B,GAAG;MACHE,OAAO,EAAE3B,SAAS,CAAC2B;IACrB,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAACC,KAAK,EAAE;IACd,OAAO,IAAI,CAACH,kBAAkB,CAACG,KAAK,CAAC;EACvC;EAEAC,eAAeA,CAACC,GAAG,EAAE;IACnB,OAAO,IAAI,CAACL,kBAAkB,CAACK,GAAG,CAAC;EACrC;EAEAC,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAAC3B,KAAK,EAAE;MACd;MACA,IAAI,CAAC4B,WAAW,CAAC,CAAC;MAClB;MACA,IAAI,CAACxB,MAAM,CAACyB,GAAG,CAAC,CAAC;IACnB;EACF;;EAEA;EACAC,UAAUA,CAAA,EAAG;IACX,IAAI,CAAC1B,MAAM,CAAC2B,KAAK,+JAGjB,CAAC;EACH;EAEAV,kBAAkBA,CAACP,YAAY,EAAE;IAC/B,IAAI,CAAC,IAAI,CAACd,KAAK,EAAE;MACf,IAAI,CAAC8B,UAAU,CAAC,CAAC;IACnB;IAEA,MAAMV,GAAG,SAAAb,MAAA,CAAS,EAAE,IAAI,CAACP,KAAK,CAAE;IAEhC,IAAIc,YAAY,CAACK,UAAU,EAAE;MAC3B,IAAI,CAACf,MAAM,CAAC2B,KAAK,CACf,sBAAAxB,MAAA,CAAqBa,GAAG,qBAAAb,MAAA,CACZO,YAAY,CAACG,IAAI,OAAG,gBAAAV,MAAA,CAClBpB,KAAK,CAAC6C,SAAS,CAAClB,YAAY,CAACC,MAAM,CAAC,OAAG,oBAAAR,MAAA,CACnCO,YAAY,CAACK,UAAU,OAAG,GAC1C,IACJ,CAAC;IACH,CAAC,MAAM;MACL,IAAI,CAACf,MAAM,CAAC2B,KAAK,uBAAAxB,MAAA,CACMa,GAAG,gBAAAb,MAAA,CAAWO,YAAY,CAACG,IAAI,kBAAAV,MAAA,CAAaO,YAAY,CAACC,MAAM,SACtF,CAAC;IACH;IAEA,OAAOK,GAAG;EACZ;EAEAQ,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACxB,MAAM,CAAC2B,KAAK,CAAC,kBAAkB,CAAC;EACvC;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGrC,eAAe","ignoreList":[]}