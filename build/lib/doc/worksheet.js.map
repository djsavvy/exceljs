{"version":3,"file":"worksheet.js","names":["_","require","colCache","Range","Row","Column","Enums","Image","Table","DataValidations","makePivotTable","Encryptor","copyStyle","Worksheet","constructor","options","_workbook","workbook","id","orderNo","name","state","_rows","_columns","_keys","_merges","rowBreaks","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","firstPageNumber","horizontalCentered","verticalCentered","colBreaks","headerFooter","differentFirst","differentOddEven","oddHeader","oddFooter","evenHeader","evenFooter","firstHeader","firstFooter","dataValidations","views","autoFilter","_media","sheetProtection","tables","pivotTables","conditionalFormattings","_name","concat","Error","test","length","console","warn","substring","_worksheets","find","ws","toLowerCase","destroy","removeWorksheetEx","dimensions","forEach","row","rowDims","expand","number","min","max","columns","value","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","count","defn","column","push","getColumnKey","key","setColumnKey","deleteColumnKey","eachColumnKey","f","each","getColumn","c","col","l2n","n","spliceColumns","start","rows","nRows","_len","arguments","inserts","Array","_key","i","rowArguments","insert","getRow","splice","apply","r","nExpand","nKeep","nEnd","definedNames","lastColumn","columnCount","maxCount","eachRow","cellCount","actualColumnCount","counts","eachCell","_ref","_commitRow","_lastRowNumber","_nextRow","lastRow","findRow","findRows","slice","rowCount","actualRowCount","getRows","addRow","style","rowNo","values","_setStyleOption","addRows","insertRow","pos","spliceRows","insertRows","_copyStyle","src","dest","styleEmpty","rSrc","rDst","includeEmpty","cell","colNumber","getCell","height","duplicateRow","rowNum","fill","_len2","_key2","nInserts","_value","cellToBeMerged","_row","_number","prevMaster","_master","newMaster","_column","merge","iteratee","hasValues","getSheetValues","findCell","address","getAddress","getCellEx","mergeCells","_len3","cells","_key3","_mergeCellsInternal","mergeCellsWithoutStyle","_len4","_key4","ignoreStyle","intersects","master","j","_unMergeMaster","unmerge","hasMerges","some","Boolean","unMergeCells","_len5","_key5","type","ValueType","Merge","fillFormula","range","formula","results","shareType","decoded","decode","width","masterAddress","encodeAddress","isShared","getResult","isArray","first","ref","result","sharedFormula","addImage","imageId","model","getImages","filter","m","addBackgroundImage","getBackgroundImageId","image","protect","password","Promise","resolve","sheet","spinCount","Number","isFinite","round","algorithmName","saltValue","randomBytes","toString","hashValue","convertPasswordToHash","unprotect","addTable","table","getTable","removeTable","getTables","addPivotTable","pivotTable","addConditionalFormatting","cf","removeConditionalFormatting","Function","tabColor","trace","media","map","medium","cols","toModel","rowModel","merges","_parseRows","_parseMergeCells","fromModel","t","module","exports"],"sources":["../../../lib/doc/worksheet.js"],"sourcesContent":["const _ = require('../utils/under-dash');\r\n\r\nconst colCache = require('../utils/col-cache');\r\nconst Range = require('./range');\r\nconst Row = require('./row');\r\nconst Column = require('./column');\r\nconst Enums = require('./enums');\r\nconst Image = require('./image');\r\nconst Table = require('./table');\r\nconst DataValidations = require('./data-validations');\r\nconst {makePivotTable} = require('./pivot-table');\r\nconst Encryptor = require('../utils/encryptor');\r\nconst {copyStyle} = require('../utils/copy-style');\r\n\r\n// Worksheet requirements\r\n//  Operate as sheet inside workbook or standalone\r\n//  Load and Save from file and stream\r\n//  Access/Add/Delete individual cells\r\n//  Manage column widths and row heights\r\n\r\nclass Worksheet {\r\n  constructor(options) {\r\n    options = options || {};\r\n    this._workbook = options.workbook;\r\n\r\n    // in a workbook, each sheet will have a number\r\n    this.id = options.id;\r\n    this.orderNo = options.orderNo;\r\n\r\n    // and a name\r\n    this.name = options.name;\r\n\r\n    // add a state\r\n    this.state = options.state || 'visible';\r\n\r\n    // rows allows access organised by row. Sparse array of arrays indexed by row-1, col\r\n    // Note: _rows is zero based. Must subtract 1 to go from cell.row to index\r\n    this._rows = [];\r\n\r\n    // column definitions\r\n    this._columns = null;\r\n\r\n    // column keys (addRow convenience): key ==> this._collumns index\r\n    this._keys = {};\r\n\r\n    // keep record of all merges\r\n    this._merges = {};\r\n\r\n    // record of all row and column pageBreaks\r\n    this.rowBreaks = [];\r\n\r\n    // for tabColor, default row height, outline levels, etc\r\n    this.properties = Object.assign(\r\n      {},\r\n      {\r\n        defaultRowHeight: 15,\r\n        dyDescent: 55,\r\n        outlineLevelCol: 0,\r\n        outlineLevelRow: 0,\r\n      },\r\n      options.properties\r\n    );\r\n\r\n    // for all things printing\r\n    this.pageSetup = Object.assign(\r\n      {},\r\n      {\r\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\r\n        orientation: 'portrait',\r\n        horizontalDpi: 4294967295,\r\n        verticalDpi: 4294967295,\r\n        fitToPage: !!(\r\n          options.pageSetup &&\r\n          (options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) &&\r\n          !options.pageSetup.scale\r\n        ),\r\n        pageOrder: 'downThenOver',\r\n        blackAndWhite: false,\r\n        draft: false,\r\n        cellComments: 'None',\r\n        errors: 'displayed',\r\n        scale: 100,\r\n        fitToWidth: 1,\r\n        fitToHeight: 1,\r\n        paperSize: undefined,\r\n        showRowColHeaders: false,\r\n        showGridLines: false,\r\n        firstPageNumber: undefined,\r\n        horizontalCentered: false,\r\n        verticalCentered: false,\r\n        rowBreaks: null,\r\n        colBreaks: null,\r\n      },\r\n      options.pageSetup\r\n    );\r\n\r\n    this.headerFooter = Object.assign(\r\n      {},\r\n      {\r\n        differentFirst: false,\r\n        differentOddEven: false,\r\n        oddHeader: null,\r\n        oddFooter: null,\r\n        evenHeader: null,\r\n        evenFooter: null,\r\n        firstHeader: null,\r\n        firstFooter: null,\r\n      },\r\n      options.headerFooter\r\n    );\r\n\r\n    this.dataValidations = new DataValidations();\r\n\r\n    // for freezepanes, split, zoom, gridlines, etc\r\n    this.views = options.views || [];\r\n\r\n    this.autoFilter = options.autoFilter || null;\r\n\r\n    // for images, etc\r\n    this._media = [];\r\n\r\n    // worksheet protection\r\n    this.sheetProtection = null;\r\n\r\n    // for tables\r\n    this.tables = {};\r\n\r\n    this.pivotTables = [];\r\n\r\n    this.conditionalFormattings = [];\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  set name(name) {\r\n    if (name === undefined) {\r\n      name = `sheet${this.id}`;\r\n    }\r\n\r\n    if (this._name === name) return;\r\n\r\n    if (typeof name !== 'string') {\r\n      throw new Error('The name has to be a string.');\r\n    }\r\n\r\n    if (name === '') {\r\n      throw new Error('The name can\\'t be empty.');\r\n    }\r\n\r\n    if (name === 'History') {\r\n      throw new Error('The name \"History\" is protected. Please use a different name.');\r\n    }\r\n\r\n    // Illegal character in worksheet name: asterisk (*), question mark (?),\r\n    // colon (:), forward slash (/ \\), or bracket ([])\r\n    if (/[*?:/\\\\[\\]]/.test(name)) {\r\n      throw new Error(`Worksheet name ${name} cannot include any of the following characters: * ? : \\\\ / [ ]`);\r\n    }\r\n\r\n    if (/(^')|('$)/.test(name)) {\r\n      throw new Error(`The first or last character of worksheet name cannot be a single quotation mark: ${name}`);\r\n    }\r\n\r\n    if (name && name.length > 31) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(`Worksheet name ${name} exceeds 31 chars. This will be truncated`);\r\n      name = name.substring(0, 31);\r\n    }\r\n\r\n    if (this._workbook._worksheets.find(ws => ws && ws.name.toLowerCase() === name.toLowerCase())) {\r\n      throw new Error(`Worksheet name already exists: ${name}`);\r\n    }\r\n\r\n    this._name = name;\r\n  }\r\n\r\n  get workbook() {\r\n    return this._workbook;\r\n  }\r\n\r\n  // when you're done with this worksheet, call this to remove from workbook\r\n  destroy() {\r\n    this._workbook.removeWorksheetEx(this);\r\n  }\r\n\r\n  // Get the bounding range of the cells in this worksheet\r\n  get dimensions() {\r\n    const dimensions = new Range();\r\n    this._rows.forEach(row => {\r\n      if (row) {\r\n        const rowDims = row.dimensions;\r\n        if (rowDims) {\r\n          dimensions.expand(row.number, rowDims.min, row.number, rowDims.max);\r\n        }\r\n      }\r\n    });\r\n    return dimensions;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Columns\r\n\r\n  // get the current columns array.\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  // set the columns from an array of column definitions.\r\n  // Note: any headers defined will overwrite existing values.\r\n  set columns(value) {\r\n    // calculate max header row count\r\n    this._headerRowCount = value.reduce((pv, cv) => {\r\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\r\n      return Math.max(pv, headerCount);\r\n    }, 0);\r\n\r\n    // construct Column objects\r\n    let count = 1;\r\n    const columns = (this._columns = []);\r\n    value.forEach(defn => {\r\n      const column = new Column(this, count++, false);\r\n      columns.push(column);\r\n      column.defn = defn;\r\n    });\r\n  }\r\n\r\n  getColumnKey(key) {\r\n    return this._keys[key];\r\n  }\r\n\r\n  setColumnKey(key, value) {\r\n    this._keys[key] = value;\r\n  }\r\n\r\n  deleteColumnKey(key) {\r\n    delete this._keys[key];\r\n  }\r\n\r\n  eachColumnKey(f) {\r\n    _.each(this._keys, f);\r\n  }\r\n\r\n  // get a single column by col number. If it doesn't exist, create it and any gaps before it\r\n  getColumn(c) {\r\n    if (typeof c === 'string') {\r\n      // if it matches a key'd column, return that\r\n      const col = this._keys[c];\r\n      if (col) return col;\r\n\r\n      // otherwise, assume letter\r\n      c = colCache.l2n(c);\r\n    }\r\n    if (!this._columns) {\r\n      this._columns = [];\r\n    }\r\n    if (c > this._columns.length) {\r\n      let n = this._columns.length + 1;\r\n      while (n <= c) {\r\n        this._columns.push(new Column(this, n++));\r\n      }\r\n    }\r\n    return this._columns[c - 1];\r\n  }\r\n\r\n  spliceColumns(start, count, ...inserts) {\r\n    const rows = this._rows;\r\n    const nRows = rows.length;\r\n    if (inserts.length > 0) {\r\n      // must iterate over all rows whether they exist yet or not\r\n      for (let i = 0; i < nRows; i++) {\r\n        const rowArguments = [start, count];\r\n        // eslint-disable-next-line no-loop-func\r\n        inserts.forEach(insert => {\r\n          rowArguments.push(insert[i] || null);\r\n        });\r\n        const row = this.getRow(i + 1);\r\n        // eslint-disable-next-line prefer-spread\r\n        row.splice.apply(row, rowArguments);\r\n      }\r\n    } else {\r\n      // nothing to insert, so just splice all rows\r\n      this._rows.forEach(r => {\r\n        if (r) {\r\n          r.splice(start, count);\r\n        }\r\n      });\r\n    }\r\n\r\n    // splice column definitions\r\n    const nExpand = inserts.length - count;\r\n    const nKeep = start + count;\r\n    const nEnd = this._columns.length;\r\n    if (nExpand < 0) {\r\n      for (let i = start + inserts.length; i <= nEnd; i++) {\r\n        this.getColumn(i).defn = this.getColumn(i - nExpand).defn;\r\n      }\r\n    } else if (nExpand > 0) {\r\n      for (let i = nEnd; i >= nKeep; i--) {\r\n        this.getColumn(i + nExpand).defn = this.getColumn(i).defn;\r\n      }\r\n    }\r\n    for (let i = start; i < start + inserts.length; i++) {\r\n      this.getColumn(i).defn = null;\r\n    }\r\n\r\n    // account for defined names\r\n    this.workbook.definedNames.spliceColumns(this.name, start, count, inserts.length);\r\n  }\r\n\r\n  get lastColumn() {\r\n    return this.getColumn(this.columnCount);\r\n  }\r\n\r\n  get columnCount() {\r\n    let maxCount = 0;\r\n    this.eachRow(row => {\r\n      maxCount = Math.max(maxCount, row.cellCount);\r\n    });\r\n    return maxCount;\r\n  }\r\n\r\n  get actualColumnCount() {\r\n    // performance nightmare - for each row, counts all the columns used\r\n    const counts = [];\r\n    let count = 0;\r\n    this.eachRow(row => {\r\n      row.eachCell(({col}) => {\r\n        if (!counts[col]) {\r\n          counts[col] = true;\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n    return count;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Rows\r\n\r\n  _commitRow() {\r\n    // nop - allows streaming reader to fill a document\r\n  }\r\n\r\n  get _lastRowNumber() {\r\n    // need to cope with results of splice\r\n    const rows = this._rows;\r\n    let n = rows.length;\r\n    while (n > 0 && rows[n - 1] === undefined) {\r\n      n--;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  get _nextRow() {\r\n    return this._lastRowNumber + 1;\r\n  }\r\n\r\n  get lastRow() {\r\n    if (this._rows.length) {\r\n      return this._rows[this._rows.length - 1];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  // find a row (if exists) by row number\r\n  findRow(r) {\r\n    return this._rows[r - 1];\r\n  }\r\n\r\n  // find multiple rows (if exists) by row number\r\n  findRows(start, length) {\r\n    return this._rows.slice(start - 1, start - 1 + length);\r\n  }\r\n\r\n  get rowCount() {\r\n    return this._lastRowNumber;\r\n  }\r\n\r\n  get actualRowCount() {\r\n    // counts actual rows that have actual data\r\n    let count = 0;\r\n    this.eachRow(() => {\r\n      count++;\r\n    });\r\n    return count;\r\n  }\r\n\r\n  // get a row by row number.\r\n  getRow(r) {\r\n    let row = this._rows[r - 1];\r\n    if (!row) {\r\n      row = this._rows[r - 1] = new Row(this, r);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  // get multiple rows by row number.\r\n  getRows(start, length) {\r\n    if (length < 1) return undefined;\r\n    const rows = [];\r\n    for (let i = start; i < start + length; i++) {\r\n      rows.push(this.getRow(i));\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  addRow(value, style = 'n') {\r\n    const rowNo = this._nextRow;\r\n    const row = this.getRow(rowNo);\r\n    row.values = value;\r\n    this._setStyleOption(rowNo, style[0] === 'i' ? style : 'n');\r\n    return row;\r\n  }\r\n\r\n  addRows(value, style = 'n') {\r\n    const rows = [];\r\n    value.forEach(row => {\r\n      rows.push(this.addRow(row, style));\r\n    });\r\n    return rows;\r\n  }\r\n\r\n  insertRow(pos, value, style = 'n') {\r\n    this.spliceRows(pos, 0, value);\r\n    this._setStyleOption(pos, style);\r\n    return this.getRow(pos);\r\n  }\r\n\r\n  insertRows(pos, values, style = 'n') {\r\n    this.spliceRows(pos, 0, ...values);\r\n    if (style !== 'n') {\r\n      // copy over the styles\r\n      for (let i = 0; i < values.length; i++) {\r\n        if (style[0] === 'o' && this.findRow(values.length + pos + i) !== undefined) {\r\n          this._copyStyle(values.length + pos + i, pos + i, style[1] === '+');\r\n        } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\r\n          this._copyStyle(pos - 1, pos + i, style[1] === '+');\r\n        }\r\n      }\r\n    }\r\n    return this.getRows(pos, values.length);\r\n  }\r\n\r\n  // set row at position to same style as of either pervious row (option 'i') or next row (option 'o')\r\n  _setStyleOption(pos, style = 'n') {\r\n    if (style[0] === 'o' && this.findRow(pos + 1) !== undefined) {\r\n      this._copyStyle(pos + 1, pos, style[1] === '+');\r\n    } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\r\n      this._copyStyle(pos - 1, pos, style[1] === '+');\r\n    }\r\n  }\r\n\r\n  _copyStyle(src, dest, styleEmpty = false) {\r\n    const rSrc = this.getRow(src);\r\n    const rDst = this.getRow(dest);\r\n    rDst.style = copyStyle(rSrc.style);\r\n    // eslint-disable-next-line no-loop-func\r\n    rSrc.eachCell({includeEmpty: styleEmpty}, (cell, colNumber) => {\r\n      rDst.getCell(colNumber).style = copyStyle(cell.style);\r\n    });\r\n    rDst.height = rSrc.height;\r\n  }\r\n\r\n  duplicateRow(rowNum, count, insert = false) {\r\n    // create count duplicates of rowNum\r\n    // either inserting new or overwriting existing rows\r\n\r\n    const rSrc = this._rows[rowNum - 1];\r\n    const inserts = new Array(count).fill(rSrc.values);\r\n    this.spliceRows(rowNum + 1, insert ? 0 : count, ...inserts);\r\n\r\n    // now copy styles...\r\n    for (let i = 0; i < count; i++) {\r\n      const rDst = this._rows[rowNum + i];\r\n      rDst.style = rSrc.style;\r\n      rDst.height = rSrc.height;\r\n      // eslint-disable-next-line no-loop-func\r\n      rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n        rDst.getCell(colNumber).style = cell.style;\r\n      });\r\n    }\r\n  }\r\n\r\n  spliceRows(start, count, ...inserts) {\r\n    // same problem as row.splice, except worse.\r\n    const nKeep = start + count;\r\n    const nInserts = inserts.length;\r\n    const nExpand = nInserts - count;\r\n    const nEnd = this._rows.length;\r\n    let i;\r\n    let rSrc;\r\n    if (nExpand < 0) {\r\n      // remove rows\r\n      if (start === nEnd) {\r\n        this._rows[nEnd - 1] = undefined;\r\n      }\r\n      for (i = nKeep; i <= nEnd; i++) {\r\n        rSrc = this._rows[i - 1];\r\n        if (rSrc) {\r\n          const rDst = this.getRow(i + nExpand);\r\n          rDst.values = rSrc.values;\r\n          rDst.style = rSrc.style;\r\n          rDst.height = rSrc.height;\r\n          // eslint-disable-next-line no-loop-func\r\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n            rDst.getCell(colNumber).style = cell.style;\r\n          });\r\n          this._rows[i - 1] = undefined;\r\n        } else {\r\n          this._rows[i + nExpand - 1] = undefined;\r\n        }\r\n      }\r\n    } else if (nExpand > 0) {\r\n      // insert new cells\r\n      for (i = nEnd; i >= nKeep; i--) {\r\n        rSrc = this._rows[i - 1];\r\n        if (rSrc) {\r\n          const rDst = this.getRow(i + nExpand);\r\n          rDst.values = rSrc.values;\r\n          rDst.style = rSrc.style;\r\n          rDst.height = rSrc.height;\r\n          // eslint-disable-next-line no-loop-func\r\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n            rDst.getCell(colNumber).style = cell.style;\r\n\r\n            // remerge cells accounting for insert offset\r\n            if (cell._value.constructor.name === 'MergeValue') {\r\n              const cellToBeMerged = this.getRow(cell._row._number + nInserts).getCell(colNumber);\r\n              const prevMaster = cell._value._master;\r\n              const newMaster = this.getRow(prevMaster._row._number + nInserts).getCell(prevMaster._column._number);\r\n              cellToBeMerged.merge(newMaster);\r\n            }\r\n          });\r\n        } else {\r\n          this._rows[i + nExpand - 1] = undefined;\r\n        }\r\n      }\r\n    }\r\n\r\n    // now copy over the new values\r\n    for (i = 0; i < nInserts; i++) {\r\n      const rDst = this.getRow(start + i);\r\n      rDst.style = {};\r\n      rDst.values = inserts[i];\r\n    }\r\n\r\n    // account for defined names\r\n    this.workbook.definedNames.spliceRows(this.name, start, count, nInserts);\r\n  }\r\n\r\n  // iterate over every row in the worksheet, including maybe empty rows\r\n  eachRow(options, iteratee) {\r\n    if (!iteratee) {\r\n      iteratee = options;\r\n      options = undefined;\r\n    }\r\n    if (options && options.includeEmpty) {\r\n      const n = this._rows.length;\r\n      for (let i = 1; i <= n; i++) {\r\n        iteratee(this.getRow(i), i);\r\n      }\r\n    } else {\r\n      this._rows.forEach(row => {\r\n        if (row && row.hasValues) {\r\n          iteratee(row, row.number);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // return all rows as sparse array\r\n  getSheetValues() {\r\n    const rows = [];\r\n    this._rows.forEach(row => {\r\n      if (row) {\r\n        rows[row.number] = row.values;\r\n      }\r\n    });\r\n    return rows;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Cells\r\n\r\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\r\n  findCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this._rows[address.row - 1];\r\n    return row ? row.findCell(address.col) : undefined;\r\n  }\r\n\r\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\r\n  getCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this.getRow(address.row);\r\n    return row.getCellEx(address);\r\n  }\r\n\r\n  // =========================================================================\r\n  // Merge\r\n\r\n  // convert the range defined by ['tl:br'], [tl,br] or [t,l,b,r] into a single 'merged' cell\r\n  mergeCells(...cells) {\r\n    const dimensions = new Range(cells);\r\n    this._mergeCellsInternal(dimensions);\r\n  }\r\n\r\n  mergeCellsWithoutStyle(...cells) {\r\n    const dimensions = new Range(cells);\r\n    this._mergeCellsInternal(dimensions, true);\r\n  }\r\n\r\n  _mergeCellsInternal(dimensions, ignoreStyle) {\r\n    // check cells aren't already merged\r\n    _.each(this._merges, merge => {\r\n      if (merge.intersects(dimensions)) {\r\n        throw new Error('Cannot merge already merged cells');\r\n      }\r\n    });\r\n\r\n    // apply merge\r\n    const master = this.getCell(dimensions.top, dimensions.left);\r\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\r\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\r\n        // merge all but the master cell\r\n        if (i > dimensions.top || j > dimensions.left) {\r\n          this.getCell(i, j).merge(master, ignoreStyle);\r\n        }\r\n      }\r\n    }\r\n\r\n    // index merge\r\n    this._merges[master.address] = dimensions;\r\n  }\r\n\r\n  _unMergeMaster(master) {\r\n    // master is always top left of a rectangle\r\n    const merge = this._merges[master.address];\r\n    if (merge) {\r\n      for (let i = merge.top; i <= merge.bottom; i++) {\r\n        for (let j = merge.left; j <= merge.right; j++) {\r\n          this.getCell(i, j).unmerge();\r\n        }\r\n      }\r\n      delete this._merges[master.address];\r\n    }\r\n  }\r\n\r\n  get hasMerges() {\r\n    // return true if this._merges has a merge object\r\n    return _.some(this._merges, Boolean);\r\n  }\r\n\r\n  // scan the range defined by ['tl:br'], [tl,br] or [t,l,b,r] and if any cell is part of a merge,\r\n  // un-merge the group. Note this function can affect multiple merges and merge-blocks are\r\n  // atomic - either they're all merged or all un-merged.\r\n  unMergeCells(...cells) {\r\n    const dimensions = new Range(cells);\r\n\r\n    // find any cells in that range and unmerge them\r\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\r\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\r\n        const cell = this.findCell(i, j);\r\n        if (cell) {\r\n          if (cell.type === Enums.ValueType.Merge) {\r\n            // this cell merges to another master\r\n            this._unMergeMaster(cell.master);\r\n          } else if (this._merges[cell.address]) {\r\n            // this cell is a master\r\n            this._unMergeMaster(cell);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Shared/Array Formula\r\n  fillFormula(range, formula, results, shareType = 'shared') {\r\n    // Define formula for top-left cell and share to rest\r\n    const decoded = colCache.decode(range);\r\n    const {top, left, bottom, right} = decoded;\r\n    const width = right - left + 1;\r\n    const masterAddress = colCache.encodeAddress(top, left);\r\n    const isShared = shareType === 'shared';\r\n\r\n    // work out result accessor\r\n    let getResult;\r\n    if (typeof results === 'function') {\r\n      getResult = results;\r\n    } else if (Array.isArray(results)) {\r\n      if (Array.isArray(results[0])) {\r\n        getResult = (row, col) => results[row - top][col - left];\r\n      } else {\r\n        // eslint-disable-next-line no-mixed-operators\r\n        getResult = (row, col) => results[(row - top) * width + (col - left)];\r\n      }\r\n    } else {\r\n      getResult = () => undefined;\r\n    }\r\n    let first = true;\r\n    for (let r = top; r <= bottom; r++) {\r\n      for (let c = left; c <= right; c++) {\r\n        if (first) {\r\n          this.getCell(r, c).value = {\r\n            shareType,\r\n            formula,\r\n            ref: range,\r\n            result: getResult(r, c),\r\n          };\r\n          first = false;\r\n        } else {\r\n          this.getCell(r, c).value = isShared\r\n            ? {\r\n                sharedFormula: masterAddress,\r\n                result: getResult(r, c),\r\n              }\r\n            : getResult(r, c);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // =========================================================================\r\n  // Images\r\n  addImage(imageId, range) {\r\n    const model = {\r\n      type: 'image',\r\n      imageId,\r\n      range,\r\n    };\r\n    this._media.push(new Image(this, model));\r\n  }\r\n\r\n  getImages() {\r\n    return this._media.filter(m => m.type === 'image');\r\n  }\r\n\r\n  addBackgroundImage(imageId) {\r\n    const model = {\r\n      type: 'background',\r\n      imageId,\r\n    };\r\n    this._media.push(new Image(this, model));\r\n  }\r\n\r\n  getBackgroundImageId() {\r\n    const image = this._media.find(m => m.type === 'background');\r\n    return image && image.imageId;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Worksheet Protection\r\n  protect(password, options) {\r\n    // TODO: make this function truly async\r\n    // perhaps marshal to worker thread or something\r\n    return new Promise(resolve => {\r\n      this.sheetProtection = {\r\n        sheet: true,\r\n      };\r\n      if (options && 'spinCount' in options) {\r\n        // force spinCount to be integer >= 0\r\n        options.spinCount = Number.isFinite(options.spinCount) ? Math.round(Math.max(0, options.spinCount)) : 100000;\r\n      }\r\n      if (password) {\r\n        this.sheetProtection.algorithmName = 'SHA-512';\r\n        this.sheetProtection.saltValue = Encryptor.randomBytes(16).toString('base64');\r\n        this.sheetProtection.spinCount = options && 'spinCount' in options ? options.spinCount : 100000; // allow user specified spinCount\r\n        this.sheetProtection.hashValue = Encryptor.convertPasswordToHash(\r\n          password,\r\n          'SHA512',\r\n          this.sheetProtection.saltValue,\r\n          this.sheetProtection.spinCount\r\n        );\r\n      }\r\n      if (options) {\r\n        this.sheetProtection = Object.assign(this.sheetProtection, options);\r\n        if (!password && 'spinCount' in options) {\r\n          delete this.sheetProtection.spinCount;\r\n        }\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  unprotect() {\r\n    this.sheetProtection = null;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Tables\r\n  addTable(model) {\r\n    const table = new Table(this, model);\r\n    this.tables[model.name] = table;\r\n    return table;\r\n  }\r\n\r\n  getTable(name) {\r\n    return this.tables[name];\r\n  }\r\n\r\n  removeTable(name) {\r\n    delete this.tables[name];\r\n  }\r\n\r\n  getTables() {\r\n    return Object.values(this.tables);\r\n  }\r\n\r\n  // =========================================================================\r\n  // Pivot Tables\r\n  addPivotTable(model) {\r\n    // eslint-disable-next-line no-console\r\n    console.warn(\r\n      `Warning: Pivot Table support is experimental. \r\nPlease leave feedback at https://github.com/exceljs/exceljs/discussions/2575`\r\n    );\r\n\r\n    const pivotTable = makePivotTable(this, model);\r\n\r\n    this.pivotTables.push(pivotTable);\r\n    this.workbook.pivotTables.push(pivotTable);\r\n\r\n    return pivotTable;\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Conditional Formatting\r\n  addConditionalFormatting(cf) {\r\n    this.conditionalFormattings.push(cf);\r\n  }\r\n\r\n  removeConditionalFormatting(filter) {\r\n    if (typeof filter === 'number') {\r\n      this.conditionalFormattings.splice(filter, 1);\r\n    } else if (filter instanceof Function) {\r\n      this.conditionalFormattings = this.conditionalFormattings.filter(filter);\r\n    } else {\r\n      this.conditionalFormattings = [];\r\n    }\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Deprecated\r\n  get tabColor() {\r\n    // eslint-disable-next-line no-console\r\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\r\n    return this.properties.tabColor;\r\n  }\r\n\r\n  set tabColor(value) {\r\n    // eslint-disable-next-line no-console\r\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\r\n    this.properties.tabColor = value;\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Model\r\n\r\n  get model() {\r\n    const model = {\r\n      id: this.id,\r\n      name: this.name,\r\n      dataValidations: this.dataValidations.model,\r\n      properties: this.properties,\r\n      state: this.state,\r\n      pageSetup: this.pageSetup,\r\n      headerFooter: this.headerFooter,\r\n      rowBreaks: this.rowBreaks,\r\n      views: this.views,\r\n      autoFilter: this.autoFilter,\r\n      media: this._media.map(medium => medium.model),\r\n      sheetProtection: this.sheetProtection,\r\n      tables: Object.values(this.tables).map(table => table.model),\r\n      pivotTables: this.pivotTables,\r\n      conditionalFormattings: this.conditionalFormattings,\r\n    };\r\n\r\n    // =================================================\r\n    // columns\r\n    model.cols = Column.toModel(this.columns);\r\n\r\n    // ==========================================================\r\n    // Rows\r\n    const rows = (model.rows = []);\r\n    const dimensions = (model.dimensions = new Range());\r\n    this._rows.forEach(row => {\r\n      const rowModel = row && row.model;\r\n      if (rowModel) {\r\n        dimensions.expand(rowModel.number, rowModel.min, rowModel.number, rowModel.max);\r\n        rows.push(rowModel);\r\n      }\r\n    });\r\n\r\n    // ==========================================================\r\n    // Merges\r\n    model.merges = [];\r\n    _.each(this._merges, merge => {\r\n      model.merges.push(merge.range);\r\n    });\r\n\r\n    return model;\r\n  }\r\n\r\n  _parseRows(model) {\r\n    this._rows = [];\r\n    model.rows.forEach(rowModel => {\r\n      const row = new Row(this, rowModel.number);\r\n      this._rows[row.number - 1] = row;\r\n      row.model = rowModel;\r\n    });\r\n  }\r\n\r\n  _parseMergeCells(model) {\r\n    _.each(model.mergeCells, merge => {\r\n      // Do not merge styles when importing an Excel file\r\n      // since each cell may have different styles intentionally.\r\n      this.mergeCellsWithoutStyle(merge);\r\n    });\r\n  }\r\n\r\n  set model(value) {\r\n    this.name = value.name;\r\n    this._columns = Column.fromModel(this, value.cols);\r\n    this._parseRows(value);\r\n\r\n    this._parseMergeCells(value);\r\n    this.dataValidations = new DataValidations(value.dataValidations);\r\n    this.properties = value.properties;\r\n    this.pageSetup = value.pageSetup;\r\n    this.headerFooter = value.headerFooter;\r\n    this.views = value.views;\r\n    this.autoFilter = value.autoFilter;\r\n    this._media = value.media.map(medium => new Image(this, medium));\r\n    this.sheetProtection = value.sheetProtection;\r\n    this.tables = value.tables.reduce((tables, table) => {\r\n      const t = new Table();\r\n      t.model = table;\r\n      tables[table.name] = t;\r\n      return tables;\r\n    }, {});\r\n    this.pivotTables = value.pivotTables;\r\n    this.conditionalFormattings = value.conditionalFormattings;\r\n  }\r\n}\r\n\r\nmodule.exports = Worksheet;\r\n"],"mappings":"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","ignoreList":[]}