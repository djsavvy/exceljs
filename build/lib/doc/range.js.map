{"version":3,"file":"range.js","names":["colCache","require","Range","constructor","decode","arguments","setTLBR","t","l","b","r","s","length","tl","decodeAddress","br","model","top","Math","min","row","left","col","bottom","max","right","sheetName","argv","value","Array","tlbr","decodeEx","Error","concat","_serialisedSheetName","test","expand","expandRow","dimensions","number","expandToAddress","addressStr","address","n2l","$t$l","$b$r","range","$range","shortRange","count","$shortRange","toString","intersects","other","contains","containsEx","forEachAddress","cb","encodeAddress","module","exports"],"sources":["../../../lib/doc/range.js"],"sourcesContent":["const colCache = require('../utils/col-cache');\r\n\r\n// used by worksheet to calculate sheet dimensions\r\nclass Range {\r\n  constructor() {\r\n    this.decode(arguments);\r\n  }\r\n\r\n  setTLBR(t, l, b, r, s) {\r\n    if (arguments.length < 4) {\r\n      // setTLBR(tl, br, s)\r\n      const tl = colCache.decodeAddress(t);\r\n      const br = colCache.decodeAddress(l);\r\n      this.model = {\r\n        top: Math.min(tl.row, br.row),\r\n        left: Math.min(tl.col, br.col),\r\n        bottom: Math.max(tl.row, br.row),\r\n        right: Math.max(tl.col, br.col),\r\n        sheetName: b,\r\n      };\r\n\r\n      this.setTLBR(tl.row, tl.col, br.row, br.col, s);\r\n    } else {\r\n      // setTLBR(t, l, b, r, s)\r\n      this.model = {\r\n        top: Math.min(t, b),\r\n        left: Math.min(l, r),\r\n        bottom: Math.max(t, b),\r\n        right: Math.max(l, r),\r\n        sheetName: s,\r\n      };\r\n    }\r\n  }\r\n\r\n  decode(argv) {\r\n    switch (argv.length) {\r\n      case 5: // [t,l,b,r,s]\r\n        this.setTLBR(argv[0], argv[1], argv[2], argv[3], argv[4]);\r\n        break;\r\n      case 4: // [t,l,b,r]\r\n        this.setTLBR(argv[0], argv[1], argv[2], argv[3]);\r\n        break;\r\n\r\n      case 3: // [tl,br,s]\r\n        this.setTLBR(argv[0], argv[1], argv[2]);\r\n        break;\r\n      case 2: // [tl,br]\r\n        this.setTLBR(argv[0], argv[1]);\r\n        break;\r\n\r\n      case 1: {\r\n        const value = argv[0];\r\n        if (value instanceof Range) {\r\n          // copy constructor\r\n          this.model = {\r\n            top: value.model.top,\r\n            left: value.model.left,\r\n            bottom: value.model.bottom,\r\n            right: value.model.right,\r\n            sheetName: value.sheetName,\r\n          };\r\n        } else if (value instanceof Array) {\r\n          // an arguments array\r\n          this.decode(value);\r\n        } else if (value.top && value.left && value.bottom && value.right) {\r\n          // a model\r\n          this.model = {\r\n            top: value.top,\r\n            left: value.left,\r\n            bottom: value.bottom,\r\n            right: value.right,\r\n            sheetName: value.sheetName,\r\n          };\r\n        } else {\r\n          // [sheetName!]tl:br\r\n          const tlbr = colCache.decodeEx(value);\r\n          if (tlbr.top) {\r\n            this.model = {\r\n              top: tlbr.top,\r\n              left: tlbr.left,\r\n              bottom: tlbr.bottom,\r\n              right: tlbr.right,\r\n              sheetName: tlbr.sheetName,\r\n            };\r\n          } else {\r\n            this.model = {\r\n              top: tlbr.row,\r\n              left: tlbr.col,\r\n              bottom: tlbr.row,\r\n              right: tlbr.col,\r\n              sheetName: tlbr.sheetName,\r\n            };\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 0:\r\n        this.model = {\r\n          top: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n          right: 0,\r\n        };\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`Invalid number of arguments to _getDimensions() - ${argv.length}`);\r\n    }\r\n  }\r\n\r\n  get top() {\r\n    return this.model.top || 1;\r\n  }\r\n\r\n  set top(value) {\r\n    this.model.top = value;\r\n  }\r\n\r\n  get left() {\r\n    return this.model.left || 1;\r\n  }\r\n\r\n  set left(value) {\r\n    this.model.left = value;\r\n  }\r\n\r\n  get bottom() {\r\n    return this.model.bottom || 1;\r\n  }\r\n\r\n  set bottom(value) {\r\n    this.model.bottom = value;\r\n  }\r\n\r\n  get right() {\r\n    return this.model.right || 1;\r\n  }\r\n\r\n  set right(value) {\r\n    this.model.right = value;\r\n  }\r\n\r\n  get sheetName() {\r\n    return this.model.sheetName;\r\n  }\r\n\r\n  set sheetName(value) {\r\n    this.model.sheetName = value;\r\n  }\r\n\r\n  get _serialisedSheetName() {\r\n    const {sheetName} = this.model;\r\n    if (sheetName) {\r\n      if (/^[a-zA-Z0-9]*$/.test(sheetName)) {\r\n        return `${sheetName}!`;\r\n      }\r\n      return `'${sheetName}'!`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  expand(top, left, bottom, right) {\r\n    if (!this.model.top || top < this.top) this.top = top;\r\n    if (!this.model.left || left < this.left) this.left = left;\r\n    if (!this.model.bottom || bottom > this.bottom) this.bottom = bottom;\r\n    if (!this.model.right || right > this.right) this.right = right;\r\n  }\r\n\r\n  expandRow(row) {\r\n    if (row) {\r\n      const {dimensions, number} = row;\r\n      if (dimensions) {\r\n        this.expand(number, dimensions.min, number, dimensions.max);\r\n      }\r\n    }\r\n  }\r\n\r\n  expandToAddress(addressStr) {\r\n    const address = colCache.decodeEx(addressStr);\r\n    this.expand(address.row, address.col, address.row, address.col);\r\n  }\r\n\r\n  get tl() {\r\n    return colCache.n2l(this.left) + this.top;\r\n  }\r\n\r\n  get $t$l() {\r\n    return `$${colCache.n2l(this.left)}$${this.top}`;\r\n  }\r\n\r\n  get br() {\r\n    return colCache.n2l(this.right) + this.bottom;\r\n  }\r\n\r\n  get $b$r() {\r\n    return `$${colCache.n2l(this.right)}$${this.bottom}`;\r\n  }\r\n\r\n  get range() {\r\n    return `${this._serialisedSheetName + this.tl}:${this.br}`;\r\n  }\r\n\r\n  get $range() {\r\n    return `${this._serialisedSheetName + this.$t$l}:${this.$b$r}`;\r\n  }\r\n\r\n  get shortRange() {\r\n    return this.count > 1 ? this.range : this._serialisedSheetName + this.tl;\r\n  }\r\n\r\n  get $shortRange() {\r\n    return this.count > 1 ? this.$range : this._serialisedSheetName + this.$t$l;\r\n  }\r\n\r\n  get count() {\r\n    return (1 + this.bottom - this.top) * (1 + this.right - this.left);\r\n  }\r\n\r\n  toString() {\r\n    return this.range;\r\n  }\r\n\r\n  intersects(other) {\r\n    if (other.sheetName && this.sheetName && other.sheetName !== this.sheetName) return false;\r\n    if (other.bottom < this.top) return false;\r\n    if (other.top > this.bottom) return false;\r\n    if (other.right < this.left) return false;\r\n    if (other.left > this.right) return false;\r\n    return true;\r\n  }\r\n\r\n  contains(addressStr) {\r\n    const address = colCache.decodeEx(addressStr);\r\n    return this.containsEx(address);\r\n  }\r\n\r\n  containsEx(address) {\r\n    if (address.sheetName && this.sheetName && address.sheetName !== this.sheetName) return false;\r\n    return (\r\n      address.row >= this.top &&\r\n      address.row <= this.bottom &&\r\n      address.col >= this.left &&\r\n      address.col <= this.right\r\n    );\r\n  }\r\n\r\n  forEachAddress(cb) {\r\n    for (let col = this.left; col <= this.right; col++) {\r\n      for (let row = this.top; row <= this.bottom; row++) {\r\n        cb(colCache.encodeAddress(row, col), row, col);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Range;\r\n"],"mappings":"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","ignoreList":[]}