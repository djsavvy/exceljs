{"version":3,"file":"ext-lst-ref-xform.js","names":["BaseXform","require","CompositeXform","X14IdXform","tag","render","xmlStream","model","leafNode","parseOpen","parseText","text","parseClose","name","ExtXform","constructor","map","idXform","openNode","uri","x14Id","closeNode","createNewModel","onParserClose","parser","ExtLstRefXform","ext","Object","assign","module","exports"],"sources":["../../../../../../lib/xlsx/xform/sheet/cf/ext-lst-ref-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst BaseXform = require('../../base-xform');\r\nconst CompositeXform = require('../../composite-xform');\r\n\r\nclass X14IdXform extends BaseXform {\r\n  get tag() {\r\n    return 'x14:id';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.leafNode(this.tag, null, model);\r\n  }\r\n\r\n  parseOpen() {\r\n    this.model = '';\r\n  }\r\n\r\n  parseText(text) {\r\n    this.model += text;\r\n  }\r\n\r\n  parseClose(name) {\r\n    return name !== this.tag;\r\n  }\r\n}\r\n\r\nclass ExtXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'x14:id': (this.idXform = new X14IdXform()),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'ext';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag, {\r\n      uri: '{B025F937-C7B1-47D3-B67F-A62EFF666E3E}',\r\n      'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\r\n    });\r\n\r\n    this.idXform.render(xmlStream, model.x14Id);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  createNewModel() {\r\n    return {};\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    this.model.x14Id = parser.model;\r\n  }\r\n}\r\n\r\nclass ExtLstRefXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n    this.map = {\r\n      ext: new ExtXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'extLst';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n    this.map.ext.render(xmlStream, model);\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  createNewModel() {\r\n    return {};\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    Object.assign(this.model, parser.model);\r\n  }\r\n}\r\n\r\nmodule.exports = ExtLstRefXform;\r\n"],"mappings":";;AAAA;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMC,cAAc,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAEvD,MAAME,UAAU,SAASH,SAAS,CAAC;EACjC,IAAII,GAAGA,CAAA,EAAG;IACR,OAAO,QAAQ;EACjB;EAEAC,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACvBD,SAAS,CAACE,QAAQ,CAAC,IAAI,CAACJ,GAAG,EAAE,IAAI,EAAEG,KAAK,CAAC;EAC3C;EAEAE,SAASA,CAAA,EAAG;IACV,IAAI,CAACF,KAAK,GAAG,EAAE;EACjB;EAEAG,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,CAACJ,KAAK,IAAII,IAAI;EACpB;EAEAC,UAAUA,CAACC,IAAI,EAAE;IACf,OAAOA,IAAI,KAAK,IAAI,CAACT,GAAG;EAC1B;AACF;AAEA,MAAMU,QAAQ,SAASZ,cAAc,CAAC;EACpCa,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,GAAG,GAAG;MACT,QAAQ,EAAG,IAAI,CAACC,OAAO,GAAG,IAAId,UAAU,CAAC;IAC3C,CAAC;EACH;EAEA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,KAAK;EACd;EAEAC,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACvBD,SAAS,CAACY,QAAQ,CAAC,IAAI,CAACd,GAAG,EAAE;MAC3Be,GAAG,EAAE,wCAAwC;MAC7C,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,OAAO,CAACZ,MAAM,CAACC,SAAS,EAAEC,KAAK,CAACa,KAAK,CAAC;IAE3Cd,SAAS,CAACe,SAAS,CAAC,CAAC;EACvB;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAO,CAAC,CAAC;EACX;EAEAC,aAAaA,CAACV,IAAI,EAAEW,MAAM,EAAE;IAC1B,IAAI,CAACjB,KAAK,CAACa,KAAK,GAAGI,MAAM,CAACjB,KAAK;EACjC;AACF;AAEA,MAAMkB,cAAc,SAASvB,cAAc,CAAC;EAC1Ca,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,GAAG,GAAG;MACTU,GAAG,EAAE,IAAIZ,QAAQ,CAAC;IACpB,CAAC;EACH;EAEA,IAAIV,GAAGA,CAAA,EAAG;IACR,OAAO,QAAQ;EACjB;EAEAC,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACvBD,SAAS,CAACY,QAAQ,CAAC,IAAI,CAACd,GAAG,CAAC;IAC5B,IAAI,CAACY,GAAG,CAACU,GAAG,CAACrB,MAAM,CAACC,SAAS,EAAEC,KAAK,CAAC;IACrCD,SAAS,CAACe,SAAS,CAAC,CAAC;EACvB;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAO,CAAC,CAAC;EACX;EAEAC,aAAaA,CAACV,IAAI,EAAEW,MAAM,EAAE;IAC1BG,MAAM,CAACC,MAAM,CAAC,IAAI,CAACrB,KAAK,EAAEiB,MAAM,CAACjB,KAAK,CAAC;EACzC;AACF;AAEAsB,MAAM,CAACC,OAAO,GAAGL,cAAc","ignoreList":[]}