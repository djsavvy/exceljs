{"version":3,"file":"workbook-view-xform.js","names":["BaseXform","require","WorkbookViewXform","render","xmlStream","model","attributes","xWindow","x","yWindow","y","windowWidth","width","windowHeight","height","firstSheet","activeTab","visibility","leafNode","parseOpen","node","name","addS","value","dflt","s","undefined","addN","n","parseInt","parseText","parseClose","module","exports"],"sources":["../../../../../lib/xlsx/xform/book/workbook-view-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nclass WorkbookViewXform extends BaseXform {\r\n  render(xmlStream, model) {\r\n    const attributes = {\r\n      xWindow: model.x || 0,\r\n      yWindow: model.y || 0,\r\n      windowWidth: model.width || 12000,\r\n      windowHeight: model.height || 24000,\r\n      firstSheet: model.firstSheet,\r\n      activeTab: model.activeTab,\r\n    };\r\n    if (model.visibility && model.visibility !== 'visible') {\r\n      attributes.visibility = model.visibility;\r\n    }\r\n    xmlStream.leafNode('workbookView', attributes);\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (node.name === 'workbookView') {\r\n      const model = (this.model = {});\r\n      const addS = function(name, value, dflt) {\r\n        const s = value !== undefined ? (model[name] = value) : dflt;\r\n        if (s !== undefined) {\r\n          model[name] = s;\r\n        }\r\n      };\r\n      const addN = function(name, value, dflt) {\r\n        const n = value !== undefined ? (model[name] = parseInt(value, 10)) : dflt;\r\n        if (n !== undefined) {\r\n          model[name] = n;\r\n        }\r\n      };\r\n      addN('x', node.attributes.xWindow, 0);\r\n      addN('y', node.attributes.yWindow, 0);\r\n      addN('width', node.attributes.windowWidth, 25000);\r\n      addN('height', node.attributes.windowHeight, 10000);\r\n      addS('visibility', node.attributes.visibility, 'visible');\r\n      addN('activeTab', node.attributes.activeTab, undefined);\r\n      addN('firstSheet', node.attributes.firstSheet, undefined);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = WorkbookViewXform;\r\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1C,MAAMC,iBAAiB,SAASF,SAAS,CAAC;EACxCG,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACvB,MAAMC,UAAU,GAAG;MACjBC,OAAO,EAAEF,KAAK,CAACG,CAAC,IAAI,CAAC;MACrBC,OAAO,EAAEJ,KAAK,CAACK,CAAC,IAAI,CAAC;MACrBC,WAAW,EAAEN,KAAK,CAACO,KAAK,IAAI,KAAK;MACjCC,YAAY,EAAER,KAAK,CAACS,MAAM,IAAI,KAAK;MACnCC,UAAU,EAAEV,KAAK,CAACU,UAAU;MAC5BC,SAAS,EAAEX,KAAK,CAACW;IACnB,CAAC;IACD,IAAIX,KAAK,CAACY,UAAU,IAAIZ,KAAK,CAACY,UAAU,KAAK,SAAS,EAAE;MACtDX,UAAU,CAACW,UAAU,GAAGZ,KAAK,CAACY,UAAU;IAC1C;IACAb,SAAS,CAACc,QAAQ,CAAC,cAAc,EAAEZ,UAAU,CAAC;EAChD;EAEAa,SAASA,CAACC,IAAI,EAAE;IACd,IAAIA,IAAI,CAACC,IAAI,KAAK,cAAc,EAAE;MAChC,MAAMhB,KAAK,GAAI,IAAI,CAACA,KAAK,GAAG,CAAC,CAAE;MAC/B,MAAMiB,IAAI,GAAG,SAAAA,CAASD,IAAI,EAAEE,KAAK,EAAEC,IAAI,EAAE;QACvC,MAAMC,CAAC,GAAGF,KAAK,KAAKG,SAAS,GAAIrB,KAAK,CAACgB,IAAI,CAAC,GAAGE,KAAK,GAAIC,IAAI;QAC5D,IAAIC,CAAC,KAAKC,SAAS,EAAE;UACnBrB,KAAK,CAACgB,IAAI,CAAC,GAAGI,CAAC;QACjB;MACF,CAAC;MACD,MAAME,IAAI,GAAG,SAAAA,CAASN,IAAI,EAAEE,KAAK,EAAEC,IAAI,EAAE;QACvC,MAAMI,CAAC,GAAGL,KAAK,KAAKG,SAAS,GAAIrB,KAAK,CAACgB,IAAI,CAAC,GAAGQ,QAAQ,CAACN,KAAK,EAAE,EAAE,CAAC,GAAIC,IAAI;QAC1E,IAAII,CAAC,KAAKF,SAAS,EAAE;UACnBrB,KAAK,CAACgB,IAAI,CAAC,GAAGO,CAAC;QACjB;MACF,CAAC;MACDD,IAAI,CAAC,GAAG,EAAEP,IAAI,CAACd,UAAU,CAACC,OAAO,EAAE,CAAC,CAAC;MACrCoB,IAAI,CAAC,GAAG,EAAEP,IAAI,CAACd,UAAU,CAACG,OAAO,EAAE,CAAC,CAAC;MACrCkB,IAAI,CAAC,OAAO,EAAEP,IAAI,CAACd,UAAU,CAACK,WAAW,EAAE,KAAK,CAAC;MACjDgB,IAAI,CAAC,QAAQ,EAAEP,IAAI,CAACd,UAAU,CAACO,YAAY,EAAE,KAAK,CAAC;MACnDS,IAAI,CAAC,YAAY,EAAEF,IAAI,CAACd,UAAU,CAACW,UAAU,EAAE,SAAS,CAAC;MACzDU,IAAI,CAAC,WAAW,EAAEP,IAAI,CAACd,UAAU,CAACU,SAAS,EAAEU,SAAS,CAAC;MACvDC,IAAI,CAAC,YAAY,EAAEP,IAAI,CAACd,UAAU,CAACS,UAAU,EAAEW,SAAS,CAAC;MACzD,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EAEAI,SAASA,CAAA,EAAG,CAAC;EAEbC,UAAUA,CAAA,EAAG;IACX,OAAO,KAAK;EACd;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG/B,iBAAiB","ignoreList":[]}