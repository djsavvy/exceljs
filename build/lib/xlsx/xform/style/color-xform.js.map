{"version":3,"file":"color-xform.js","names":["BaseXform","require","ColorXform","constructor","name","tag","render","xmlStream","model","openNode","argb","addAttribute","theme","undefined","tint","indexed","closeNode","parseOpen","node","attributes","rgb","parseInt","parseFloat","parseText","parseClose","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/color-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\n// Color encapsulates translation from color model to/from xlsx\r\nclass ColorXform extends BaseXform {\r\n  constructor(name) {\r\n    super();\r\n\r\n    // this.name controls the xm node name\r\n    this.name = name || 'color';\r\n  }\r\n\r\n  get tag() {\r\n    return this.name;\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model) {\r\n      xmlStream.openNode(this.name);\r\n      if (model.argb) {\r\n        xmlStream.addAttribute('rgb', model.argb);\r\n      } else if (model.theme !== undefined) {\r\n        xmlStream.addAttribute('theme', model.theme);\r\n        if (model.tint !== undefined) {\r\n          xmlStream.addAttribute('tint', model.tint);\r\n        }\r\n      } else if (model.indexed !== undefined) {\r\n        xmlStream.addAttribute('indexed', model.indexed);\r\n      } else {\r\n        xmlStream.addAttribute('auto', '1');\r\n      }\r\n      xmlStream.closeNode();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (node.name === this.name) {\r\n      if (node.attributes.rgb) {\r\n        this.model = {argb: node.attributes.rgb};\r\n      } else if (node.attributes.theme) {\r\n        this.model = {theme: parseInt(node.attributes.theme, 10)};\r\n        if (node.attributes.tint) {\r\n          this.model.tint = parseFloat(node.attributes.tint);\r\n        }\r\n      } else if (node.attributes.indexed) {\r\n        this.model = {indexed: parseInt(node.attributes.indexed, 10)};\r\n      } else {\r\n        this.model = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = ColorXform;\r\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE1C;AACA,MAAMC,UAAU,SAASF,SAAS,CAAC;EACjCG,WAAWA,CAACC,IAAI,EAAE;IAChB,KAAK,CAAC,CAAC;;IAEP;IACA,IAAI,CAACA,IAAI,GAAGA,IAAI,IAAI,OAAO;EAC7B;EAEA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACD,IAAI;EAClB;EAEAE,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACvB,IAAIA,KAAK,EAAE;MACTD,SAAS,CAACE,QAAQ,CAAC,IAAI,CAACL,IAAI,CAAC;MAC7B,IAAII,KAAK,CAACE,IAAI,EAAE;QACdH,SAAS,CAACI,YAAY,CAAC,KAAK,EAAEH,KAAK,CAACE,IAAI,CAAC;MAC3C,CAAC,MAAM,IAAIF,KAAK,CAACI,KAAK,KAAKC,SAAS,EAAE;QACpCN,SAAS,CAACI,YAAY,CAAC,OAAO,EAAEH,KAAK,CAACI,KAAK,CAAC;QAC5C,IAAIJ,KAAK,CAACM,IAAI,KAAKD,SAAS,EAAE;UAC5BN,SAAS,CAACI,YAAY,CAAC,MAAM,EAAEH,KAAK,CAACM,IAAI,CAAC;QAC5C;MACF,CAAC,MAAM,IAAIN,KAAK,CAACO,OAAO,KAAKF,SAAS,EAAE;QACtCN,SAAS,CAACI,YAAY,CAAC,SAAS,EAAEH,KAAK,CAACO,OAAO,CAAC;MAClD,CAAC,MAAM;QACLR,SAAS,CAACI,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC;MACrC;MACAJ,SAAS,CAACS,SAAS,CAAC,CAAC;MACrB,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,IAAIA,IAAI,CAACd,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MAC3B,IAAIc,IAAI,CAACC,UAAU,CAACC,GAAG,EAAE;QACvB,IAAI,CAACZ,KAAK,GAAG;UAACE,IAAI,EAAEQ,IAAI,CAACC,UAAU,CAACC;QAAG,CAAC;MAC1C,CAAC,MAAM,IAAIF,IAAI,CAACC,UAAU,CAACP,KAAK,EAAE;QAChC,IAAI,CAACJ,KAAK,GAAG;UAACI,KAAK,EAAES,QAAQ,CAACH,IAAI,CAACC,UAAU,CAACP,KAAK,EAAE,EAAE;QAAC,CAAC;QACzD,IAAIM,IAAI,CAACC,UAAU,CAACL,IAAI,EAAE;UACxB,IAAI,CAACN,KAAK,CAACM,IAAI,GAAGQ,UAAU,CAACJ,IAAI,CAACC,UAAU,CAACL,IAAI,CAAC;QACpD;MACF,CAAC,MAAM,IAAII,IAAI,CAACC,UAAU,CAACJ,OAAO,EAAE;QAClC,IAAI,CAACP,KAAK,GAAG;UAACO,OAAO,EAAEM,QAAQ,CAACH,IAAI,CAACC,UAAU,CAACJ,OAAO,EAAE,EAAE;QAAC,CAAC;MAC/D,CAAC,MAAM;QACL,IAAI,CAACP,KAAK,GAAGK,SAAS;MACxB;MACA,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EAEAU,SAASA,CAAA,EAAG,CAAC;EAEbC,UAAUA,CAAA,EAAG;IACX,OAAO,KAAK;EACd;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGxB,UAAU","ignoreList":[]}