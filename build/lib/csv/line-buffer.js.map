{"version":3,"file":"line-buffer.js","names":["EventEmitter","require","LineBuffer","constructor","options","encoding","buffer","corked","queue","write","chunk","data","lines","split","pop","forEach","line","push","emit","cork","uncork","_flush","setDefaultEncoding","end","module","exports"],"sources":["../../../lib/csv/line-buffer.js"],"sourcesContent":["const {EventEmitter} = require('events');\r\n\r\nclass LineBuffer extends EventEmitter {\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.encoding = options.encoding;\r\n\r\n    this.buffer = null;\r\n\r\n    // part of cork/uncork\r\n    this.corked = false;\r\n    this.queue = [];\r\n  }\r\n\r\n  // Events:\r\n  //  line: here is a line\r\n  //  done: all lines emitted\r\n\r\n  write(chunk) {\r\n    // find line or lines in chunk and emit them if not corked\r\n    // or queue them if corked\r\n    const data = this.buffer ? this.buffer + chunk : chunk;\r\n    const lines = data.split(/\\r?\\n/g);\r\n\r\n    // save the last line\r\n    this.buffer = lines.pop();\r\n\r\n    lines.forEach(function(line) {\r\n      if (this.corked) {\r\n        this.queue.push(line);\r\n      } else {\r\n        this.emit('line', line);\r\n      }\r\n    });\r\n\r\n    return !this.corked;\r\n  }\r\n\r\n  cork() {\r\n    this.corked = true;\r\n  }\r\n\r\n  uncork() {\r\n    this.corked = false;\r\n    this._flush();\r\n\r\n    // tell the source I'm ready again\r\n    this.emit('drain');\r\n  }\r\n\r\n  setDefaultEncoding() {\r\n    // ?\r\n  }\r\n\r\n  end() {\r\n    if (this.buffer) {\r\n      this.emit('line', this.buffer);\r\n      this.buffer = null;\r\n    }\r\n    this.emit('done');\r\n  }\r\n\r\n  _flush() {\r\n    if (!this.corked) {\r\n      this.queue.forEach(line => {\r\n        this.emit('line', line);\r\n      });\r\n      this.queue = [];\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = LineBuffer;\r\n"],"mappings":";;AAAA,MAAM;EAACA;AAAY,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAExC,MAAMC,UAAU,SAASF,YAAY,CAAC;EACpCG,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACC,QAAQ;IAEhC,IAAI,CAACC,MAAM,GAAG,IAAI;;IAElB;IACA,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,KAAK,GAAG,EAAE;EACjB;;EAEA;EACA;EACA;;EAEAC,KAAKA,CAACC,KAAK,EAAE;IACX;IACA;IACA,MAAMC,IAAI,GAAG,IAAI,CAACL,MAAM,GAAG,IAAI,CAACA,MAAM,GAAGI,KAAK,GAAGA,KAAK;IACtD,MAAME,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,QAAQ,CAAC;;IAElC;IACA,IAAI,CAACP,MAAM,GAAGM,KAAK,CAACE,GAAG,CAAC,CAAC;IAEzBF,KAAK,CAACG,OAAO,CAAC,UAASC,IAAI,EAAE;MAC3B,IAAI,IAAI,CAACT,MAAM,EAAE;QACf,IAAI,CAACC,KAAK,CAACS,IAAI,CAACD,IAAI,CAAC;MACvB,CAAC,MAAM;QACL,IAAI,CAACE,IAAI,CAAC,MAAM,EAAEF,IAAI,CAAC;MACzB;IACF,CAAC,CAAC;IAEF,OAAO,CAAC,IAAI,CAACT,MAAM;EACrB;EAEAY,IAAIA,CAAA,EAAG;IACL,IAAI,CAACZ,MAAM,GAAG,IAAI;EACpB;EAEAa,MAAMA,CAAA,EAAG;IACP,IAAI,CAACb,MAAM,GAAG,KAAK;IACnB,IAAI,CAACc,MAAM,CAAC,CAAC;;IAEb;IACA,IAAI,CAACH,IAAI,CAAC,OAAO,CAAC;EACpB;EAEAI,kBAAkBA,CAAA,EAAG;IACnB;EAAA;EAGFC,GAAGA,CAAA,EAAG;IACJ,IAAI,IAAI,CAACjB,MAAM,EAAE;MACf,IAAI,CAACY,IAAI,CAAC,MAAM,EAAE,IAAI,CAACZ,MAAM,CAAC;MAC9B,IAAI,CAACA,MAAM,GAAG,IAAI;IACpB;IACA,IAAI,CAACY,IAAI,CAAC,MAAM,CAAC;EACnB;EAEAG,MAAMA,CAAA,EAAG;IACP,IAAI,CAAC,IAAI,CAACd,MAAM,EAAE;MAChB,IAAI,CAACC,KAAK,CAACO,OAAO,CAACC,IAAI,IAAI;QACzB,IAAI,CAACE,IAAI,CAAC,MAAM,EAAEF,IAAI,CAAC;MACzB,CAAC,CAAC;MACF,IAAI,CAACR,KAAK,GAAG,EAAE;IACjB;EACF;AACF;AAEAgB,MAAM,CAACC,OAAO,GAAGvB,UAAU","ignoreList":[]}